basePath: /api
definitions:
  api.UsernameAndPassword:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.ErrorResponse:
    properties:
      errorMessage:
        type: string
    type: object
  models.User:
    properties:
      addr:
        type: string
      createTime:
        type: string
      gender:
        type: string
      headImg:
        type: string
      id:
        type: integer
      lat:
        type: number
      lon:
        type: number
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: HobbyHub 后端 API 文档
  title: HobbyHub API
  version: "1.0"
paths:
  /v1/user/info:
    get:
      description: 通过用户ID获取用户信息，可选用户id或用户名查询，优先使用用户id
      parameters:
      - description: 用户ID
        in: query
        name: id
        type: integer
      - description: 用户名
        in: query
        name: username
        type: string
      - description: JWT Token
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取用户信息
      tags:
      - 用户相关接口
  /v1/user/login:
    post:
      consumes:
      - application/json
      description: 用户名密码登录
      parameters:
      - description: 登录请求体，包含用户名和密码
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/api.UsernameAndPassword'
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 用户登录
      tags:
      - 用户相关接口
  /v1/user/register:
    post:
      consumes:
      - application/json
      description: 用户名密码注册
      parameters:
      - description: 注册请求体，包含用户名和密码
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/api.UsernameAndPassword'
      produces:
      - application/json
      responses:
        "200":
          description: JWT Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 用户注册
      tags:
      - 用户相关接口
  /v1/user/update:
    put:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: 用户数据，必须包含id
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/models.User'
      - description: JWT Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 修改后的用户信息
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 更新用户信息
      tags:
      - 用户相关接口
swagger: "2.0"
